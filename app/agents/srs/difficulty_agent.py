# app/services/difficulty_service.py
from openai import OpenAI
from app.core.config import OPENAI_API_KEY, LLM_MODEL

client = OpenAI(api_key=OPENAI_API_KEY)

def generate_difficulty_prompt_text(description_name: str, description_content: str, target_task: str) -> str:
    # 기존 generate_difficulty_prompt_text 함수 내용 붙여넣기
    return f"""
당신은 소프트웨어 요구사항의 기술적 구현 난이도를 분석하고 평가하는 **수십 년 경력의 베테랑 개발 팀장 또는 시스템 아키텍트**입니다. 제시된 요구사항의 **기술적 복잡성, 필요한 리서치 및 학습량, 구현에 필요한 공수, 외부 시스템과의 연동 복잡성, 테스트의 난해함, 그리고 잠재적인 리스크** 등을 종합적으로 고려하여 난이도를 '상', '중', '하' 중 하나로 매우 신중하고 일관성 있게 평가해야 합니다.

다음은 시스템에 대한 요구사항입니다:

[요구사항 명]
{description_name}

[상세 설명]
{description_content}

[대상 업무]
{target_task}

요구사항을 분석한 뒤 전체 시스템에 대한 개요를 파악하고, 다음의 **판단 가이드라인과 세부 평가 기준**을 참고하여 난이도를 평가하세요:

**[판단 가이드라인: 난이도에 영향을 미치는 주요 요소]**
1.  **요구사항의 명확성 및 구체성:** 요구사항이 모호하거나 해석의 여지가 많을수록 분석 및 설계 단계부터 어려움이 추가되어 난이도가 상승합니다.
2.  **기술적 생소함 및 복잡도:** 새로운 프로그래밍 언어, 프레임워크, 라이브러리, 알고리즘의 도입이 필요하거나, 기존에 다뤄보지 않은 매우 복잡한 기술적 구현이 요구될 경우 난이도가 높습니다.
3.  **시스템 연동의 범위 및 복잡도:** 연동해야 할 내부/외부 시스템의 수가 많거나, 연동 방식(API, 프로토콜 등)이 복잡하거나, 연동 대상 시스템의 문서화가 미흡하거나 기술 지원이 원활하지 않을 경우 난이도가 크게 상승합니다.
4.  **데이터 처리 및 마이그레이션의 복잡성:** 처리해야 할 데이터의 양이 매우 방대하거나, 데이터 구조가 복잡하거나, 기존 시스템과의 데이터 정합성 유지 및 마이그레이션 작업이 까다로울 경우 난이도가 높습니다.
5.  **기존 시스템에 대한 영향 (Side Effect):** 요구사항 구현으로 인해 기존 시스템의 다른 부분에 예상치 못한 영향을 미칠 가능성이 높고, 이로 인해 광범위한 테스트와 수정이 필요할 경우 난이도가 증가합니다.
6.  **테스트의 복잡성 및 용이성:** 단위 테스트, 통합 테스트, 시스템 테스트 시나리오가 복잡하거나, 테스트 환경 구축이 어렵거나, 테스트 데이터 생성이 까다로운 경우 난이도가 높습니다.
7.  **비기능적 요구사항의 달성 난이도:** 매우 높은 수준의 성능(응답 시간, 처리량), 보안(암호화, 접근 제어), 안정성, 확장성 등의 비기능적 요구사항을 만족시켜야 한다면 기술적 도전 과제가 많아져 난이도가 상승합니다.
8.  **유지보수성 고려:** 향후 유지보수가 용이하도록 코드를 구조화하고 문서화하는 데 추가적인 노력이 많이 필요할 것으로 예상되면 난이도에 반영될 수 있습니다.

**[난이도 평가 기준]**

* **상 (H, High):**
    * **판단 근거:** 위의 판단 가이드라인 중 **다수 항목에서 높은 수준의 복잡성 또는 불확실성**이 확인되거나, **특정 한두 요소가 프로젝트 일정에 심각한 지연을 초래할 만큼 치명적인 기술적 장벽**을 포함하는 경우.
    * **특징적 상황:**
        * 핵심 아키텍처 변경 또는 검증되지 않은 신기술의 광범위한 도입/연구가 필요함.
        * 복잡한 알고리즘 설계 및 구현, 또는 전례 없는 수준의 시스템 연동이 요구됨.
        * 요구사항의 불확실성이 극도로 높아 초기 분석/설계 단계에서부터 상당한 시간과 리서치, PoC(Proof of Concept)가 필요함.
        * 구현 실패의 리스크가 높거나, 성공하더라도 사전에 계획된 개발 일정을 현저히 초과할 가능성이 매우 농후함.
        * 해결을 위해 팀 내 최고 수준의 전문가 투입 또는 외부 전문 컨설팅이 필요할 수 있음.
    * **일정 영향:** 자체 개발 일정에 **심각한 차질(예: 주요 마일스톤의 상당한 지연, 예정된 리소스 초과 등)**을 초래할 정도의 높은 노력과 시간이 필요하며, 별도의 핵심 과제로 관리되어야 하는 수준.

* **중 (M, Medium):**
    * **판단 근거:** 판단 가이드라인 중 **일부 항목에서 중간 정도의 복잡성**이 관찰되거나, 해결해야 할 몇 가지 기술적 고려사항 및 도전 과제가 명확히 존재하는 경우.
    * **특징적 상황:**
        * 익숙한 기술 스택을 기반으로 하지만 새로운 기능을 개발하거나 기존 기능에 대한 상당한 수정이 필요함.
        * 일부 복잡한 비즈니스 로직, 혹은 예측 가능한 범위 내의 기술적 문제 해결이 요구됨.
        * 내부 모듈 간의 복잡한 상호작용 또는 비교적 잘 정의된 외부 시스템과의 연동 작업이 포함됨.
        * 어느 정도의 분석/설계 시간이 필요하며, 구현 중 예상치 못한 이슈가 발생할 수 있으나 관리 가능한 수준.
    * **일정 영향:** 집중적인 노력과 계획적인 접근을 통해 **자체 개발 일정 내에 충분히 완수 가능**하나, 일정 내에서도 타이트하거나 약간의 도전이 따를 수 있는 수준.

* **하 (L, Low):**
    * **판단 근거:** 판단 가이드라인의 대부분 항목에서 복잡성이 낮거나, 기술적으로 **매우 명확하고 직접적인 해결 방법**이 존재하는 경우.
    * **특징적 상황:**
        * 기존 기능의 단순 버그 수정, UI 텍스트 변경, 경미한 디자인 조정, 이미 잘 구축된 컴포넌트의 재활용 또는 매우 간단한 로직의 추가.
        * 새로운 기술 학습이나 복잡한 분석/설계 과정이 거의 불필요하며, 구현 경로가 명확함.
        * 타 시스템과의 연동이 없거나 매우 단순하며, 테스트가 용이함.
    * **일정 영향:** 현재 진행 중인 다른 작업과 병행하거나, **자체 개발 일정의 일부분으로 특별한 부담 없이 충분히 흡수**되어 별도의 추가 공수 산정 없이 진행 가능한 수준.

아래와 같이 **정확히 이 형식**으로만 출력하세요 (불필요한 설명 없이):

난이도: <상|중|하>
"""

def get_difficulty_agent(description_name: str, description_content: str, target_task: str) -> str:
    prompt = generate_difficulty_prompt_text(description_name, description_content, target_task)
    try:
        response = client.chat.completions.create(
            model=LLM_MODEL,
            messages=[
                {"role": "system", "content": "당신은 소프트웨어 분석 전문가입니다."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.4
        )
        content = response.choices[0].message.content or ""
        difficulty = next((line.split(":")[1].strip() for line in content.splitlines() if "난이도" in line), "중")
        return difficulty
    except Exception as e:
        print(f"Error in get_difficulty_agent: {e}")
        return "Error"